{"ast":null,"code":"var _jsxFileName = \"/home/rhm101/code/RhysMalyon/polaris-form/src/components/NewForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from 'react';\nimport { Button, FormLayout, TextField, Select, DatePicker } from '@shopify/polaris';\nimport lunarisData from '../data/lunarisData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewForm() {\n  _s();\n\n  var userData = useState(lunarisData[0]);\n  var [isEditing, setIsEditing] = useState(false);\n  var [firstName, setFirstName] = useState(userData[0].first_name);\n  var handleFirstNameChange = useCallback(newValue => setFirstName(userData[0].first_name = newValue), []);\n  var [lastName, setLastName] = useState(userData[0].last_name);\n  var handleLastNameChange = useCallback(newValue => setLastName(userData[0].last_name = newValue), []);\n  var [address, setAddress] = useState(userData[0].address);\n  var handleAddresssChange = useCallback(newValue => setAddress(userData[0].address = newValue), []);\n  var [gender, setGender] = useState(userData[0].gender);\n  var handleGenderChange = useCallback(newValue => setGender(userData[0].gender = newValue), []);\n  var genderOptions = [{\n    label: 'Male',\n    value: 'male'\n  }, {\n    label: 'Female',\n    value: 'female'\n  }, {\n    label: 'Unknown',\n    value: 'unknown'\n  }, {\n    label: 'Prefer Not To Say',\n    value: 'preferNotToSay'\n  }]; // const [birthday, setBirthday] = useState(new Date(userData[0].birthday));\n  // const handleBirthdayChange = useCallback((newValue) => setBirthday(newValue), []);\n\n  var [{\n    month,\n    year\n  }, setDate] = useState({\n    month: {\n      birthMonth\n    },\n    year: {\n      birthYear\n    }\n  });\n  var [selectedDates, setSelectedDates] = useState({\n    start: birthday,\n    end: birthday\n  });\n  var handleBirthdayChange = useCallback((month, year) => setDate({\n    month,\n    year\n  }), []);\n  var birthday = new Date(userData[0].birthday);\n  console.log(birthday);\n  var birthMonth = birthday.getMonth();\n  var birthYear = birthday.getFullYear();\n  console.log(birthMonth);\n  console.log(birthYear);\n\n  function handleClick() {\n    setIsEditing(!isEditing);\n    console.log(userData);\n  }\n\n  return /*#__PURE__*/_jsxDEV(FormLayout, {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"First Name\",\n      value: firstName,\n      onChange: handleFirstNameChange,\n      disabled: !isEditing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Last name\",\n      value: lastName,\n      onChange: handleLastNameChange,\n      disabled: !isEditing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Address\",\n      value: address,\n      onChange: handleAddresssChange,\n      disabled: !isEditing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      label: \"Gender\",\n      options: genderOptions,\n      value: gender,\n      onChange: handleGenderChange,\n      disabled: !isEditing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n      month: month,\n      year: year,\n      disabled: !isEditing,\n      onChange: setSelectedDates,\n      onMonthChange: handleBirthdayChange,\n      selected: selectedDates\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleClick,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n} // class Form extends React.Component {\n//   constructor() {\n//     super()\n//     this.state = {\n//       userInfo: lunarisData,\n//       birthday: new Date(\"2008-02-20\"),\n//       isEditing: false\n//     }\n//     this.handleClick = this.handleClick.bind(this)\n//     this.handleChange = this.handleChange.bind(this)\n//   }\n//   handleClick() {\n//     const editStatus = this.setState(prevState => {\n//       return {\n//         isEditing: !prevState.isEditing\n//       }\n//     })\n//     return {\n//       isEditing: editStatus\n//     }\n//   }\n//   handleChange() {newValue => setValue(newValue), []};\n//   render() {\n//     const date = this.state.birthday.getDate()\n//     const month = this.state.birthday.getMonth()\n//     const year = this.state.birthday.getFullYear()\n//     const genderOptions = [\n//       {label: 'Male', value: 'Male'},\n//       {label: 'Female', value: 'Female'},\n//       {label: 'Prefer Not To Say', value: 'Prefer Not To Say'},\n//     ]\n//     const editStatus = !this.state.isEditing\n//     return (\n//       <FormLayout>\n//         <TextField\n//           label=\"First name\"\n//           value={this.state.userInfo[0].first_name}\n//           onChange={this.handleChange}\n//           disabled={editStatus}\n//         />\n//         <TextField\n//           label=\"Last name\"\n//           value={this.state.userInfo[0].last_name}\n//           onChange={() => { } }\n//           disabled={editStatus}\n//         />\n//         <TextField\n//           label=\"Address\"\n//           value={this.state.userInfo[0].address}\n//           onChange={() => { } } \n//           disabled={editStatus}\n//         />\n//         <Select \n//           label=\"Gender\"\n//           options={genderOptions}\n//           onChange={() => {}}\n//           disabled={editStatus}\n//         />\n//         <DatePicker\n//           date={date}\n//           month={month}\n//           year={year}\n//           disabled={editStatus}\n//         />\n//         <Button onClick={this.handleClick}>Edit</Button>\n//       </FormLayout>\n//     )\n//   }\n// }\n\n\n_s(NewForm, \"XQmyloYnhAg1HneClYYvb3ZtKAM=\");\n\n_c = NewForm;\nexport default NewForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewForm\");","map":{"version":3,"sources":["/home/rhm101/code/RhysMalyon/polaris-form/src/components/NewForm.js"],"names":["React","useCallback","useState","Button","FormLayout","TextField","Select","DatePicker","lunarisData","NewForm","userData","isEditing","setIsEditing","firstName","setFirstName","first_name","handleFirstNameChange","newValue","lastName","setLastName","last_name","handleLastNameChange","address","setAddress","handleAddresssChange","gender","setGender","handleGenderChange","genderOptions","label","value","month","year","setDate","birthMonth","birthYear","selectedDates","setSelectedDates","start","birthday","end","handleBirthdayChange","Date","console","log","getMonth","getFullYear","handleClick"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react';\nimport {\n  Button,\n  FormLayout,\n  TextField,\n  Select,\n  DatePicker\n} from '@shopify/polaris';\n\nimport lunarisData from '../data/lunarisData';\n\nfunction NewForm() {\n  const userData = useState(lunarisData[0])\n\n  const [isEditing, setIsEditing] = useState(false);\n\n  const [firstName, setFirstName] = useState(userData[0].first_name);\n  const handleFirstNameChange = useCallback((newValue) => setFirstName(userData[0].first_name = newValue), []);\n\n  \n  const [lastName, setLastName] = useState(userData[0].last_name);\n  const handleLastNameChange = useCallback((newValue) => setLastName(userData[0].last_name = newValue), []);\n\n  const [address, setAddress] = useState(userData[0].address);\n  const handleAddresssChange = useCallback((newValue) => setAddress(userData[0].address = newValue), []);\n\n\n  const [gender, setGender] = useState(userData[0].gender);\n  const handleGenderChange = useCallback((newValue) => setGender(userData[0].gender = newValue), []);\n\n  const genderOptions = [\n    {label: 'Male', value: 'male'},\n    {label: 'Female', value: 'female'},\n    {label: 'Unknown', value: 'unknown'},\n    {label: 'Prefer Not To Say', value: 'preferNotToSay'},\n  ]\n\n  // const [birthday, setBirthday] = useState(new Date(userData[0].birthday));\n  // const handleBirthdayChange = useCallback((newValue) => setBirthday(newValue), []);\n  const [{month, year}, setDate] = useState({month: {birthMonth}, year: {birthYear}});\n  const [selectedDates, setSelectedDates] = useState({\n    start: birthday,\n    end: birthday,\n  });\n  \n  const handleBirthdayChange = useCallback(\n    (month, year) => setDate({month, year}),\n    [],\n  );\n\n  const birthday = new Date(userData[0].birthday)\n  console.log(birthday)\n\n  const birthMonth = birthday.getMonth()\n  const birthYear = birthday.getFullYear()\n\n  console.log(birthMonth)\n  console.log(birthYear)\n  \n\n  function handleClick() {\n    setIsEditing(!isEditing)\n    console.log(userData)\n  }\n\n  return (\n    <FormLayout>\n      <TextField\n        label=\"First Name\"\n        value={firstName}\n        onChange={handleFirstNameChange}\n        disabled={!isEditing}\n      />\n      <TextField\n        label=\"Last name\"\n        value={lastName}\n        onChange={handleLastNameChange}\n        disabled={!isEditing}\n      />\n      <TextField\n        label=\"Address\"\n        value={address}\n        onChange={handleAddresssChange} \n        disabled={!isEditing}\n      />\n      <Select \n        label=\"Gender\"\n        options={genderOptions}\n        value={gender}\n        onChange={handleGenderChange}\n        disabled={!isEditing}\n      />\n      <DatePicker\n        month={month}\n        year={year}\n        disabled={!isEditing}\n        onChange={setSelectedDates}\n        onMonthChange={handleBirthdayChange}\n        selected={selectedDates}\n      />\n      <Button onClick={handleClick}>Edit</Button>\n    </FormLayout>\n  );\n}\n\n// class Form extends React.Component {\n//   constructor() {\n//     super()\n//     this.state = {\n//       userInfo: lunarisData,\n//       birthday: new Date(\"2008-02-20\"),\n//       isEditing: false\n//     }\n//     this.handleClick = this.handleClick.bind(this)\n//     this.handleChange = this.handleChange.bind(this)\n//   }\n  \n//   handleClick() {\n//     const editStatus = this.setState(prevState => {\n//       return {\n//         isEditing: !prevState.isEditing\n//       }\n//     })\n//     return {\n//       isEditing: editStatus\n//     }\n//   }\n\n//   handleChange() {newValue => setValue(newValue), []};\n\n//   render() {\n//     const date = this.state.birthday.getDate()\n//     const month = this.state.birthday.getMonth()\n//     const year = this.state.birthday.getFullYear()\n\n//     const genderOptions = [\n//       {label: 'Male', value: 'Male'},\n//       {label: 'Female', value: 'Female'},\n//       {label: 'Prefer Not To Say', value: 'Prefer Not To Say'},\n//     ]\n\n//     const editStatus = !this.state.isEditing\n\n//     return (\n//       <FormLayout>\n//         <TextField\n//           label=\"First name\"\n//           value={this.state.userInfo[0].first_name}\n//           onChange={this.handleChange}\n//           disabled={editStatus}\n//         />\n//         <TextField\n//           label=\"Last name\"\n//           value={this.state.userInfo[0].last_name}\n//           onChange={() => { } }\n//           disabled={editStatus}\n//         />\n//         <TextField\n//           label=\"Address\"\n//           value={this.state.userInfo[0].address}\n//           onChange={() => { } } \n//           disabled={editStatus}\n//         />\n//         <Select \n//           label=\"Gender\"\n//           options={genderOptions}\n//           onChange={() => {}}\n//           disabled={editStatus}\n//         />\n//         <DatePicker\n//           date={date}\n//           month={month}\n//           year={year}\n//           disabled={editStatus}\n//         />\n//         <Button onClick={this.handleClick}>Edit</Button>\n//       </FormLayout>\n//     )\n//   }\n// }\n\nexport default NewForm\n"]},"metadata":{},"sourceType":"module"}